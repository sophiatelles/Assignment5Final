install.packages("tidyverse", lib="D:/Data Viz/Rpackages")
install.packages(ggplot2)
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
install.packages("ggplot2")
install.packages("tidyverse")
library(ggplot2)
library(dplyr)
library(tidyr)
.libPaths("D:/R/R-3.4.1/")
install.packages("tidyverse")
install.packages("tidyverse")
library(ggplot2)
library(dplyr)
library(tidyr)
head(mpg)
ggplot(data=mpg,aes(x=displ,y=hwy))+geom_point()
.libPaths()
install.packages("tidyverse")
getwd()
install.packages("psych")
install.packages("nnet")
install.packages(c("tidyr", "devtools"))
devtools::install_github("garrettgman/DSR")
library(DSR)
table1
table2
table3
table4 # cases
table5 # population
table1$cases
table1$cases / table1$population *1000
table1$cases
```{r}
mean(table1$cases)
table1$cases/table1$population*1000
table1$cases/table1$population * 1000
(table1$cases/table1$population) * 1000
table1$cases / table1$population * 10000
table2$value[case_rows] / table2$value[pop_rows] * 10000
table2$value[case_rows] / table2$value[pop_rows] * 10000
table2$value[case_rows] / table2$value[pop_rows] * 10000
table2$value[cases_rows] / table2$value[pop_rows] * 10000
table2$value[case_rows] / table2$value[pop_rows] * 10000
table2
spread(table2, key, value)
library(tidyr)
spread(table2,key,value)
spread(table2, key, value)
spread(table2)
spread(table2, key, value)
spread(table2, key, value)
spread(table2,
key, value)
spread(table2,key,value)
spread(table2,value)
?spread
table2
spread(table2,type,count)
table4
gather(table4,"1999", "cases", 2:3)
gather(table4,"year", "cases", 2:3)
table5
gather(table5,"year","population",2:3)
gather(table4,"year","population",2:3)
table5
table4
table3
warnings()
separate(table3, rate, into = c("cases", "population"))
separate(table3, year, into = c("century", "year"), sep = 2)
table6
unite(table6, "new", century, year, sep = "")
library(DSR)
warnings()
view(who)
view(who)
devtools::install_github("garrettgman/DSR")
force = TRUE
view(who)
View(who)
library(tidyverse)
table1
table2
table3
table 4a
table4a
table4b
table1 %>%
```
table1
mutate(rate= cases/ populatoin *10000)
mutate(rate= cases/ population *10000)
mutate(rate = cases/ population * 10000)
mutate(rate = cases / population * 10000)
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year, wt = cases)
library(ggplot2)
ggplot(table1, aes(year,cases)) + geom_line(aes(group = country), colour = "grey50") + geom_point(aes(colour = country))
table4a
table4a %>%
gather('1999', '2000', key = "year", value = "cases")
table4b %>%
gather('1999', '2000', key = "year", value = "population")
left_join(tidy4a, tidy4b)
tidy4b <- table4b %>%
gather('1999', '2000', key = "year", value = "population")
left_join(tidy4a, tidy4b)
left_join(tidy4a, tidy4b)
table2
spread(table2, key = type, value = count)
table3
table3 %>%
separate(rate, into = c("cases", "population"))
table3 %>%
separate(rate, into = c("cases", "population"), convert = TRUE)
table3 %>%
separate(year, into = c("century", "year"), sep = 2)
table5 %>%
unite(new, century, year)
install.packages("nycflights13")
library(tidyr)
library(ggplot2)
library(dplyr)
d2 <- diamonds[sample(1:dim(diamonds)[1], 1000)]
library(tidyverse)
head(mpg)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point()
myplot + geom_point()
ggplot(d2,aes(carat,price))+geom_point()+facet_wrap(color~cut)
d2 <- diamonds[sample(1:dim(diamonds)[1], 1000), ]
ggplot(data = d2, aes(x = carat, y = price, color=color)) + geom_point()
ggplot(d2,aes(carat,price,color=color))+geom_point()+facet_wrap(~cut)
ggplot(d2,aes(carat,price))+geom_point()+facet_wrap(color~cut)
ggplot(data = d2, aes(x = carat, y = price)) +
geom_point()+geom_smooth(method="lm")
ggplot(data = d2, aes(x = carat, y = price)) +
geom_point()+geom_smooth(method="lm")
ggplot(data = d2, aes(x = carat, y = price, color=color)) +
geom_point()+geom_smooth(method="lm")
+ geom_boxplot()
+ geom_boxplot()
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_violin()
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
ggplot(mpg, aes(hwy) + geom_histogram())
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_histogram(fill="purple", color="black",binwidth=1)
ggplot(mpg, aes(hwy)) + geom_histogram(fill="purple", color="black",binwidth=20)
ggplot(mpg, aes(hwy)) + geom_histogram(fill="purple", color="black",binwidth=1)
ggplot(mp,aes(hwy)) +geom_freqpoly(binwidth=1)
ggplot(mpg,aes(hwy)) +geom_freqpoly(binwidth=1)
ggplot(mpg,aes(hwy))+geom_freqpoly(binwidth=1)+geom_histogram(fill="purple",color="black",binwidth=1)
ggplot(mpg, aes(hwy)) + geom_density()
ggplot(mpg,aes(hwy))+geom_freqpoly(binwidth=1)+geom_histogram(fill="purple",color="black",binwidth=1,alpha=.15
)
ggplot(mpg, aes(hwy, fill=drv)) + geom_density()
ggplot(mpg, aes(hwy, fill=drv)) + geom_density(alpha=.15)
ggplot(mpg, aes(hwy, fill=drv)) + geom_density(alpha=.2)
ggplot(mpg,aes(manufacturer))+geom_bar()
ggplot(mpg,aes(manufacturer))+geom_bar()+coord_flip()
head(mpg$manufacturer)
Classcounts=mpg %>%group_by(class)%>%summarize(number=lenght(class))
Classcounts=mpg %>%group_by(class)%>%summarize(number=length(class))
ggplot(Classcounts,aes(class,number))+(geom_bar(stat="identity"))
ggplot(Classcounts,aes(reorder(class,number))+(geom_bar(stat="identity", fill="red"))
```
ggplot(Classcounts,aes(reorder(class,number))+geom_bar(stat="identity", fill="red")
```
ggplot(Classcounts,aes(reorder(class,number),number)+geom_bar(stat="identity", fill="red")
```
Classcounts=mpg %>%group_by(class)%>%summarize(number=length(class))
ggplot(Classcounts,aes(reorder(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(class,number),number))+geom_bar(stat="identity", color="red")
ggplot(Classcounts,aes(reorder(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(order(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(x = reorder(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(number,class),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(class,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(class,-number),number))+geom_bar(stat="identity", fill="red")
ggplot(mpg,aes(manufacturer))+geom_bar()
ggplot(mpg, aes(hwy, fill=drv)) + geom_density(alpha=.2)
ggplot(Classcounts,aes(reorder(drv,-number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(reorder(drv,-number),number))+geom_bar(stat="identity", fill="red")
ggplot(mpg, aes(hwy, fill=drv)) + geom_density(alpha=.2)
ggplot(Classcounts,aes(reorder(hwy,number),number))+geom_bar(stat="identity", fill="red")
ggplot(Classcounts,aes(hwy,number))+geom_bar(stat="identity", fill="red")
ggplot(mpg,aes(manufacturer,fill=class))+geom_bar()+coord_flip()
ggplot(mpg,aes(manufacturer,fill=class))+geom_bar(position = "dodge")+coord_flip()
ggplot(mpg,aes(count,fill=class))+geom_bar(position = "dodge")
d2
ggplot(mpg,aes(count,fill=class))+geom_bar(position = "dodge")
ggplot(mpg,aes(count,clarity, fill=class))+geom_bar(position = "dodge")
ggplot(mpg,aes(count,clarity, fill=cut))+geom_bar(position = "dodge")
ggplot(mpg,aes(clarity, cut, count))+geom_bar(position = "dodge")
ggplot(d2,aes(count,clarity, fill=cut))+geom_bar(position = "dodge")
ggplot(d2,aes(clarity, fill=cut))+geom_bar(position = "dodge")
rnorm(12,50000,1000)
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b"
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
install.packages("xlsx")
library("xlsx")
library(xlsx)
library("xlsx"")
```
library("xlsx")
library(readxl)
tallestbuildings <- read_excel("C:/Users/Sophie/Downloads/tallestbuildings.xlsx")
View(tallestbuildings)
library(tidyverse)
library(readxl)
library(tidyverse)
library(ggplot2)
head(mpg)
install.packages("readxl")
install.packages("readxl")
read_excel("tallestbuildings.xls")
read_excel("tallestbuildings.xlsx")
tallb
uses=tallb%>%group_by(Use)%>%summarize(Mean=mean(`Height (ft)`))
uses
ggplot(uses,aes(reorder(Use,Mean),Mean))+geom_bar(stat="identity")+coord_flip()+ylab("Mean Height (ft)")+xlab("Use")
ggplot(CCountry,aes(reorder(CountryName,-number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
setwd("D:/Data Viz/Assignment 5")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
tallb=read_excel("tallestbuildings.xlsx")
library(ggplot2)
library(dplyr)
library(tidyr)
head(tallb)
citycounts=tallb%>%group_by(City)%>%summarize(number=length(City))
citycounts
ggplot(citycounts,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")
meanb=tallb%>%group_by(City)%>%summarize(number=mean(`Height (ft)`))
meanb
meanb=tallb%>%group_by(City)%>%summarize(number=mean(`Height (ft)`))
meanb
ggplot(meanb,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")+ylab("Mean Height (ft)")
Country=separate(data = citycounts,col=City, into =c("City","Country"), sep ="\\(")
CCountry=separate(data = Country,col=Country, into =c("Country",NA), sep ="\\)")
CCountry
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
Country=separate(data = citycounts,col=City, into =c("City","Country"), sep ="\\(")
CCountry=separate(data = Country,col=Country, into =c("Country",NA), sep ="\\)")
CCountry
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
meanc=tallb%>%group_by(City)%>%summarize(MeanHeight =mean(`Height (ft)`))
meanc
MCountry=separate(data = meanc,col=City, into =c("City","Country"), sep ="\\(")
MeCountry=separate(data = MCountry,col=Country, into =c("Country",NA), sep ="\\)")
MeCountry
library(countrycode)
MeCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
MeCountry$CountryName
ggplot(MeCountry,aes(reorder(CountryName,MeanHeight),MeanHeight))+coord_flip()+geom_bar(stat="identity")+xlab("Country")
ggplot(CCountry,aes(reorder(CountryName,number),number,fill=as.factor(CountryName)))+geom_bar(stat="identity",position="dodge")+coord_flip()+xlab("CountryName")
tallb
uses=tallb%>%group_by(Use)%>%summarize(Mean=mean(`Height (ft)`))
uses
ggplot(uses,aes(reorder(Use,Mean),Mean))+geom_bar(stat="identity",position = "dodge")+coord_flip()+ylab("Mean Height (ft)")+xlab("Use")
meanc=tallb%>%group_by(City)%>%summarize(Mean =mean(`Height (ft)`))
meanc
MCountry=separate(data = meanc,col=City, into =c("City","Country"), sep ="\\(")
MeCountry=separate(data = MCountry,col=Country, into =c("Country",NA), sep ="\\)")
MeCountry
library(countrycode)
MeCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
MeCountry$CountryName
ggplot(MeCountry,aes(reorder(CountryName,Mean),Mean))+coord_flip()+geom_bar(stat="identity")+xlab("Country")
ggplot(CCountry,aes(reorder(CountryName,number),number,fill=as.factor(CountryName)))+geom_bar(stat="identity",position="dodge")+coord_flip()+xlab("CountryName")
tallb
uses=tallb%>%group_by(Use)%>%summarize(Mean=mean(`Height (ft)`))
uses
ggplot(uses,aes(reorder(Use,Mean),Mean))+geom_bar(stat="identity",position = "dodge")+coord_flip()+ylab("Mean Height (ft)")+xlab("Use")
ggplot(MeCountry,aes(reorder(CountryName,Mean),Mean))+coord_flip()+geom_bar(stat="identity")+xlab("Country")
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
head(CCountry)
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")
ggplot(CCountry,aes(reorder(as.factor(CountryName),number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
ggplot(as.data.frame(CCountry),aes(reorder(as.factor(CountryName),number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(readxl)
tallb=read_excel("tallestbuildings.xlsx")
# Chunk 3
library(ggplot2)
library(dplyr)
library(tidyr)
# Chunk 4
head(tallb)
# Chunk 5
citycounts=tallb%>%group_by(City)%>%summarize(number=length(City))
citycounts
# Chunk 6
ggplot(citycounts,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")
# Chunk 7
meanb=tallb%>%group_by(City)%>%summarize(number=mean(`Height (ft)`))
meanb
# Chunk 8
ggplot(meanb,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")+ylab("Mean Height (ft)")
# Chunk 9
Country=separate(data = citycounts,col=City, into =c("City","Country"), sep ="\\(")
CCountry=separate(data = Country,col=Country, into =c("Country",NA), sep ="\\)")
CCountry
# Chunk 10
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
ggplot(CCountry,aes(CountryName,number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
str(meanb)
str(CCountry)
CCountry=CCountry[,-3]
str(CCountry)
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
CCountry$number=as.numeric(CCountry$number)
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_point()+coord_flip()+xlab("CountryName")
CCountry
head(citycounts)
head(tallb)
Country=separate(data = tallb,col=City, into =c("City","Country"), sep ="\\(")
CCountry=separate(data = Country,col=Country, into =c("Country",NA), sep ="\\)")
CCountry
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("CountryName")
head(CCountry)
countrycounts=tallb%>%group_by(CountryName)%>%summarize(number=length(CountryName))
countrycounts=CCountry%>%group_by(CountryName)%>%summarize(number=length(CountryName))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(readxl)
tallb=read_excel("tallestbuildings.xlsx")
# Chunk 3
library(ggplot2)
library(dplyr)
library(tidyr)
# Chunk 4
head(tallb)
# Chunk 5
citycounts=tallb%>%group_by(City)%>%summarize(number=length(City))
citycounts
# Chunk 6
ggplot(citycounts,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")
# Chunk 7
meanb=tallb%>%group_by(City)%>%summarize(number=mean(`Height (ft)`))
meanb
# Chunk 8
ggplot(meanb,aes(reorder(City,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("City")+ylab("Mean Height (ft)")
Country=separate(data = tallb,col=City, into =c("City","Country"), sep ="\\(")
head(Country)
CCountry=separate(data = Country,col=Country, into =c("Country",NA), sep ="\\)")
CCountry
library(countrycode)
CCountry$CountryName=countrycode(CCountry$Country,"iso2c", "country.name")
CCountry$CountryName
countrycounts=CCountry%>%group_by(CountryName)%>%summarize(number=length(CountryName))
countrycounts=CCountry%>%group_by(CountryName)%>%dplyr::summarize(number=length(CountryName))
head(CCountry)
names(CCountry)
CCountry=CCountry[,-5]
countrycounts=CCountry%>%group_by(CountryName)%>%summarize(number=length(CountryName))
ggplot(CCountry,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("Country Name")
ggplot(countrycounts,aes(reorder(CountryName,number),number))+geom_bar(stat="identity")+coord_flip()+xlab("Country Name")
meanc=tallb%>%group_by(City)%>%summarize(Mean =mean(`Height (ft)`))
meanc
meanc=tallb%>%group_by(CountryName)%>%summarize(Mean =mean(`Height (ft)`))
meanc
meanc=CCountry%>%group_by(CountryName)%>%summarize(Mean =mean(`Height (ft)`))
meanc
meanc=CCountry%>%group_by(CountryName)%>%summarize(Mean =mean(`Height (ft)`))
meanc
ggplot(meanc,aes(reorder(CountryName,Mean),Mean))+coord_flip()+geom_bar(stat="identity")+xlab("Country")
